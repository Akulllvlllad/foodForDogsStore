import { createSlice, PayloadAction} from '@reduxjs/toolkit'
import { RootState } from '../store'


type OptionsItems ={
  name: '–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏üëá' | '—Ü–µ–Ω–µ üëá' | '–∞–ª—Ñ–∞–≤–∏—Ç—É(–Ø-–ê)'| '–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏üëÜ' | '—Ü–µ–Ω–µüëÜ' | '–∞–ª—Ñ–∞–≤–∏—Ç—É(–ê-–Ø)',
  sort: 'rating' | 'minPrise' | 'name'| '-rating' | '-minPrise' | '-name',
}

interface FilterSliceState {
    options: OptionsItems[],
    categories: string[],
    isCategory: number,
    isOption: number,
    search: string,
    page: number,
}
const initialState:FilterSliceState = {
  options: [ 
    {name:'–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏üëá', sort:'rating'}, 
    {name:'—Ü–µ–Ω–µ üëá', sort:'minPrise'}, 
    {name:'–∞–ª—Ñ–∞–≤–∏—Ç—É(–Ø-–ê)', sort:'name'},
    {name:'–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏üëÜ', sort:'-rating'}, 
    {name:'—Ü–µ–Ω–µüëÜ', sort:'-minPrise'}, 
    {name:'–∞–ª—Ñ–∞–≤–∏—Ç—É(–ê-–Ø)', sort:'-name'},
  ],
  categories: ['–í—Å–µ', '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ª–∏–Ω–µ–π–∫–∞', '–ó–∞–ø–µ—á–µ–Ω—ã–µ', '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π', '–î–ª—è —â–µ–Ω–∫–æ–≤'],
  isCategory: 0,
  isOption: 0,
  search: '',
  page: 1,
}
export const filterSlice = createSlice({
  name: 'filters',
  initialState,
  reducers: {
    setCategory(state, action: PayloadAction<number>) {
      state.isCategory = action.payload
    },
    setOption(state, action: PayloadAction<number>) {
      state.isOption = action.payload
    },
    setSearch(state, action: PayloadAction<string>) {
      state.search = action.payload
    },
    setPage(state, action: PayloadAction<number>) {
      state.page = action.payload
    },
    
    
  },
  extraReducers:{

  }
})

  
export const selectFilter = (state: RootState) => state.filter

export const {setCategory, setOption, setSearch, setPage} = filterSlice.actions 
export default filterSlice.reducer